# Generated by Django 4.0 on 2024-05-09 16:35

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='Username')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Категория')),
                ('description', models.TextField(verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Coloring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('image', models.ImageField(upload_to='colorings/', verbose_name='Изображение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('type', models.CharField(choices=[('VERTICAL', 'Вертикальное'), ('HORIZONTAL', 'Горизонтальное'), ('SQUARE', 'Квадратное')], default='HORIZONTAL', max_length=10, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Coloring',
                'verbose_name_plural': 'Colorings',
                'db_table': 'colorings',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Тематика')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image', models.ImageField(upload_to='themes/', verbose_name='Картинка темы')),
                ('popular_image', models.ImageField(upload_to='themes/', verbose_name='Картинка темы для популярных')),
                ('rating', models.IntegerField(default=0, verbose_name='Посещаемость')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('language', models.CharField(choices=[('English', 'English'), ('Deutsch', 'Deutsch'), ('Español', 'Español'), ('Português', 'Português'), ('Français', 'Français'), ('Italiano', 'Italiano'), ('Polski', 'Polski'), ('Русский', 'Русский')], default='English', max_length=15, verbose_name='Язык')),
                ('category', models.ManyToManyField(to='models_app.Category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Theme',
                'verbose_name_plural': 'Themes',
                'db_table': 'themes',
            },
        ),
        migrations.CreateModel(
            name='LikeTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='models_app.theme', verbose_name='Тематика')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='models_app.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Like theme',
                'verbose_name_plural': 'Likes themes',
                'db_table': 'theme_likes',
            },
        ),
        migrations.CreateModel(
            name='LikeColoring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coloring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coloring_likes', to='models_app.coloring', verbose_name='Раскраска')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coloring_likes', to='models_app.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Like coloring',
                'verbose_name_plural': 'Likes colorings',
                'db_table': 'coloring_likes',
            },
        ),
        migrations.AddField(
            model_name='coloring',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='themes', to='models_app.theme', verbose_name='Тематика'),
        ),
    ]
